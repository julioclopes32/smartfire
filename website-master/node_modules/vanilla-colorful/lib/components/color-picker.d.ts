import type { AnyColor, ColorModel, HsvaColor } from '../types';
import './hue.js';
import './saturation.js';
declare const $h: unique symbol;
declare const $s: unique symbol;
declare const $isSame: unique symbol;
declare const $color: unique symbol;
declare const $hsva: unique symbol;
declare const $change: unique symbol;
export declare const $render: unique symbol;
export declare abstract class ColorPicker<C extends AnyColor> extends HTMLElement {
    static get observedAttributes(): string[];
    protected abstract get colorModel(): ColorModel<C>;
    private [$h];
    private [$s];
    private [$hsva];
    private [$color];
    get color(): C;
    set color(newColor: C);
    constructor();
    connectedCallback(): void;
    attributeChangedCallback(_attr: string, _oldVal: string, newVal: string): void;
    handleEvent(event: CustomEvent): void;
    private [$isSame];
    protected [$render](hsva: HsvaColor): void;
    private [$change];
}
export {};
//# sourceMappingURL=color-picker.d.ts.map