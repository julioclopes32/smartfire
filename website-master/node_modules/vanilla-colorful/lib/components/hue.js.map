{"version":3,"file":"hue.js","sourceRoot":"","sources":["../../src/lib/components/hue.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,WAAW,EAAe,MAAM,kBAAkB,CAAC;AAC5D,OAAO,EAAE,eAAe,EAAE,MAAM,qBAAqB,CAAC;AACtD,OAAO,EAAE,cAAc,EAAE,UAAU,EAAE,MAAM,iBAAiB,CAAC;AAC7D,OAAO,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,kBAAkB,CAAC;AAChD,OAAO,MAAM,MAAM,kBAAkB,CAAC;AAEtC,MAAM,QAAQ,GAAG,cAAc,CAAC,UAAU,MAAM,UAAU,CAAC,CAAC;AAE5D,MAAM,OAAO,GAAI,SAAQ,WAAW;IAClC;QACE,KAAK,EAAE,CAAC;QACR,UAAU,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;QAC3B,IAAI,CAAC,YAAY,CAAC,YAAY,EAAE,KAAK,CAAC,CAAC;QACvC,IAAI,CAAC,YAAY,CAAC,eAAe,EAAE,GAAG,CAAC,CAAC;QACxC,IAAI,CAAC,YAAY,CAAC,eAAe,EAAE,KAAK,CAAC,CAAC;IAC5C,CAAC;IAED,iBAAiB;QACf,IAAI,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,EAAE;YAC9B,MAAM,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC;YACvB,OAAO,IAAI,CAAC,KAAmB,CAAC,CAAC;YACjC,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC;SAClB;IACH,CAAC;IAID,IAAI,EAAE;QACJ,OAAO,KAAK,CAAC;IACf,CAAC;IAED,IAAI,GAAG;QACL,OAAO,IAAI,CAAC,EAAE,CAAC;IACjB,CAAC;IAED,IAAI,GAAG,CAAC,CAAS;QACf,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;QACZ,IAAI,CAAC,SAAS,CAAC;YACb,IAAI,EAAE,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,GAAG;YAC3B,KAAK,EAAE,eAAe,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;SACpD,CAAC,CAAC;QACH,IAAI,CAAC,YAAY,CAAC,eAAe,EAAE,GAAG,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;IACpD,CAAC;IAED,OAAO,CAAC,WAAwB,EAAE,GAAa;QAC7C,oEAAoE;QACpE,OAAO,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,GAAG,WAAW,CAAC,IAAI,GAAG,GAAG,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,WAAW,CAAC,IAAI,EAAE,CAAC;IAChG,CAAC;CACF;AAED,cAAc,CAAC,MAAM,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC","sourcesContent":["import { Interactive, Interaction } from './interactive.js';\nimport { hsvaToHslString } from '../utils/convert.js';\nimport { createTemplate, createRoot } from '../utils/dom.js';\nimport { clamp, round } from '../utils/math.js';\nimport styles from '../styles/hue.js';\n\nconst template = createTemplate(`<style>${styles}</style>`);\n\nexport class Hue extends Interactive {\n  constructor() {\n    super();\n    createRoot(this, template);\n    this.setAttribute('aria-label', 'Hue');\n    this.setAttribute('aria-valuemin', '0');\n    this.setAttribute('aria-valuemax', '360');\n  }\n\n  connectedCallback(): void {\n    if (this.hasOwnProperty('hue')) {\n      const value = this.hue;\n      delete this['hue' as keyof this];\n      this.hue = value;\n    }\n  }\n\n  private _h!: number;\n\n  get xy(): boolean {\n    return false;\n  }\n\n  get hue(): number {\n    return this._h;\n  }\n\n  set hue(h: number) {\n    this._h = h;\n    this.setStyles({\n      left: `${(h / 360) * 100}%`,\n      color: hsvaToHslString({ h, s: 100, v: 100, a: 1 })\n    });\n    this.setAttribute('aria-valuenow', `${round(h)}`);\n  }\n\n  getMove(interaction: Interaction, key?: boolean): Record<string, number> {\n    // Hue measured in degrees of the color circle ranging from 0 to 360\n    return { h: key ? clamp(this.hue + interaction.left * 360, 0, 360) : 360 * interaction.left };\n  }\n}\n\ncustomElements.define('vc-hue', Hue);\n"]}