{"version":3,"file":"color-picker.js","sourceRoot":"","sources":["../../src/lib/components/color-picker.ts"],"names":[],"mappings":"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","sourcesContent":["import { equalColorObjects } from '../utils/compare.js';\nimport { createTemplate, createRoot } from '../utils/dom.js';\nimport type { AnyColor, ColorModel, HsvaColor } from '../types';\nimport type { Hue } from './hue.js';\nimport type { Saturation } from './saturation.js';\nimport './hue.js';\nimport './saturation.js';\nimport styles from '../styles/color-picker.js';\n\nconst tpl = createTemplate(`\n<style>${styles}</style>\n<vc-saturation part=\"saturation\" exportparts=\"pointer: saturation-pointer\"></vc-saturation>\n<vc-hue part=\"hue\" exportparts=\"pointer: hue-pointer\"></vc-hue>\n`);\n\nconst $h = Symbol('h');\nconst $s = Symbol('s');\nconst $isSame = Symbol('same');\nconst $color = Symbol('color');\nconst $hsva = Symbol('hsva');\nconst $change = Symbol('change');\n\nexport const $render = Symbol('render');\n\nexport abstract class ColorPicker<C extends AnyColor> extends HTMLElement {\n  static get observedAttributes(): string[] {\n    return ['color'];\n  }\n\n  protected abstract get colorModel(): ColorModel<C>;\n\n  private [$h]!: Hue;\n\n  private [$s]!: Saturation;\n\n  private [$hsva]!: HsvaColor;\n\n  private [$color]!: C;\n\n  get color(): C {\n    return this[$color];\n  }\n\n  set color(newColor: C) {\n    if (!this[$isSame](newColor)) {\n      const newHsva = this.colorModel.toHsva(newColor);\n      this[$render](newHsva);\n      this[$change](newColor, newHsva);\n    }\n  }\n\n  constructor() {\n    super();\n    const root = createRoot(this, tpl);\n    root.addEventListener('move', this);\n    this[$s] = root.children[1] as Saturation;\n    this[$h] = root.children[2] as Hue;\n  }\n\n  connectedCallback(): void {\n    // A user may set a property on an _instance_ of an element,\n    // before its prototype has been connected to this class.\n    // If so, we need to run it through the proper class setter.\n    if (this.hasOwnProperty('color')) {\n      const value = this.color;\n      delete this['color' as keyof this];\n      this.color = value;\n    } else if (!this.color) {\n      this.color = this.colorModel.defaultColor;\n    }\n  }\n\n  attributeChangedCallback(_attr: string, _oldVal: string, newVal: string): void {\n    const color = this.colorModel.fromAttr(newVal);\n    if (!this[$isSame](color)) {\n      this.color = color;\n    }\n  }\n\n  handleEvent(event: CustomEvent): void {\n    // Merge the current HSV color object with updated params.\n    const newHsva = Object.assign({}, this[$hsva], event.detail);\n    this[$render](newHsva);\n    let newColor;\n    if (\n      !equalColorObjects(newHsva, this[$hsva]) &&\n      !this[$isSame]((newColor = this.colorModel.fromHsva(newHsva)))\n    ) {\n      this[$change](newColor, newHsva);\n    }\n  }\n\n  private [$isSame](color: C): boolean {\n    return this.color && this.colorModel.equal(color, this.color);\n  }\n\n  protected [$render](hsva: HsvaColor): void {\n    this[$s].hsva = hsva;\n    this[$h].hue = hsva.h;\n  }\n\n  private [$change](color: C, hsva: HsvaColor): void {\n    this[$color] = color;\n    this[$hsva] = hsva;\n    this.dispatchEvent(\n      new CustomEvent('color-changed', { bubbles: true, detail: { value: color } })\n    );\n  }\n}\n"]}